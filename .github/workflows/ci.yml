name: CI

# uruchamiaj workflow zarówno na push do `main`, jak i na każde PR do `main`
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Token ma dostęp do kodu (read) i do pakietów (write)
permissions:
  contents: read
  packages: write

jobs:
  # 1) uniwersalne budowanie na PR i na push
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js & Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile


      - name: Run lint, tests & build affected
        run: yarn nx affected --target=lint,test,build --parallel

  # 2) dopiero na push do main – logowanie do ghcr.io + push docker images
  publish:
    needs: build
    # wykonuj tylko gdy to faktyczny push (nie PR) do main
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js & Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
        # UWAGA: secret `GHCR_PAT` musi mieć uprawnienia write:packages
      - name: Build & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/hello-world/Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/static-site:latest
            ghcr.io/${{ github.repository_owner }}/static-site:${{ github.sha }}

      - name: Verify GHCR image is available
        run: |
          echo "Lista tagów obrazu:"
          curl -s \
            -H "Authorization: Bearer ${{ secrets.GHCR_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/static-site/versions \
            | jq '.[].metadata.container.tags'
