name: CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: 🛠 Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Cache Yarn
      - name: Cache Yarn
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      # Cache NX
      - name: Cache NX
        uses: actions/cache@v3
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint, Test & Build affected projects
        run: |
          yarn nx affected --target=lint,test,build --parallel --base=${{ github.event.before }} --head=${{ github.sha }}

  docker:
    name: 🐋 Build & Push Docker
    needs: build
    if: github.event_name == 'push'  # tylko przy push do master
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compute lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up QEMU (for ARM emulation)
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64,linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/hello-world/Dockerfile
          push: true
          platforms: linux/arm64/v8,linux/amd64
          tags: |
            ghcr.io/${{ env.OWNER_LOWER }}/hello-world:latest
