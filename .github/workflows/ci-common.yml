name: CI Common

permissions:
  contents: read
  packages: write

on:
  workflow_call:
    inputs:
      project_name:
        description: 'NX project name (e.g. hello-world)'
        required: true
        type: string
      workspace_path:
        description: 'Path to the app folder (e.g. apps/hello-world)'
        required: true
        type: string
      docker_image:
        description: 'Full GHCR image name (without tag)'
        required: true
        type: string
      targets:
        description: 'Comma-separated NX targets to run'
        required: false
        type: string
        default: 'lint,test,build'
    secrets:
      GHCR_PAT:
        description: 'Token to push to GHCR'
        required: true

jobs:
  build:
    name: 🛠 Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache dependencies & NX
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            .nx/cache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint, Test & Build affected for ${{ inputs.project_name }}
        run: |
          yarn nx affected \
            --target=${{ inputs.targets }} \
            --projects=${{ inputs.project_name }} \
            --parallel \
            --base=origin/master \
            --head=HEAD

  docker:
    name: 🐋 Build & Push Docker
    needs: build
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compute lowercase owner
        run: |
          echo "OWNER_LOWER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up QEMU (for ARM emulation)
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64,linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.workspace_path }}/Dockerfile
          push: true
          platforms: linux/arm64/v8,linux/amd64
          tags: |
            ${{ inputs.docker_image }}:latest
